1 - Bug [RESUELTO - FALSA ALARMA]
"batch_operations no soporta copy"

INVESTIGACIÓN:
✅ El código SÍ SOPORTA "copy" (batch_operations.go:15, 219-226, 404-405, 455-465)
✅ El rollback SÍ SOPORTA "copy" (batch_operations.go:290-292)

CAUSA DEL REPORTE:
La descripción de la herramienta en main.go solo mostraba ejemplos con "write",
lo que causó confusión sobre qué operaciones se soportaban.

SOLUCIÓN IMPLEMENTADA:
1. ✅ Mejorada descripción de batch_operations en main.go (line 927)
   - Ahora menciona explícitamente: write, edit, copy, move, delete, create_dir
   - Incluye ejemplo con copy

2. ✅ Actualizada documentación BATCH_OPERATIONS_GUIDE.md:
   - Agregada sección "Windows-Specific Notes"
   - Clarificado que copy FUNCIONA en batch_operations
   - Agregados ejemplos de uso con copy

OPERACIONES SOPORTADAS EN batch_operations:
✅ write      - Escribir archivo
✅ edit       - Editar archivo (reemplazo simple)
✅ copy       - Copiar archivo/directorio
✅ move       - Mover/renombrar archivo
✅ delete     - Eliminar archivo
✅ create_dir - Crear directorio

NOTA IMPORTANTE:
El usuario mencionó "Hay que usar copy_file individualmente para hacer los backups"
- Esto NO es necesario
- batch_operations CON copy funciona perfectamente
- Ver BATCH_OPERATIONS_GUIDE.md para ejemplos

2 - Bug
Después de un buen rato de trabajo unos 5 min Claude desktop elimina del hilo lo que hizo y desaparece los procesos en el hilo. 

3 - Bug
Otro problema es que claude todo lo que le digo lo busca en el proyecto.. Por ejemplo si le digo que me revise una funcion y le paso la funcion completa el busca la funcion en el proyecto,
esto es un problema ya que custa mucho encontrarla en un proyecto grande y solo era una revision de una funcion.

4- Bug [RESUELTO]
Problema con recovery_edit en Windows:
recovery_edit no persiste cambios en tu filesystem de Windows, aunque filesystem-ultra tiene acceso configurado a C:\__REPOS\...

CAUSA RAÍZ IDENTIFICADA:
- El código de recovery_edit, edit_file y smart_edit_file está correctamente implementado
- Escriben los cambios atómicamente al disco usando os.Rename()
- El problema es una limitación de Claude Desktop: ejecuta MCP en un subsistema Linux
- Aunque los cambios se escriben correctamente en Linux, NO se sincronizan automáticamente con Windows

SOLUCIÓN IMPLEMENTADA:
1. ✅ Creado: guides/WINDOWS_FILESYSTEM_PERSISTENCE.md (documentación completa)
2. ✅ Agregados comentarios DEPRECATED/WARNING en:
   - claude_optimizer.go (AutoRecoveryEdit, IntelligentEdit)
   - edit_operations.go (EditFile)
   - streaming_operations.go (SmartEditFile)
3. ✅ Documentado workflow correcto para Windows

RECOMENDACIÓN OFICIAL:
**Para que los cambios persistan en Windows:**
- ✅ Usar: `write_file`, `intelligent_write`, `streaming_write_file` (reemplazo completo)
- ❌ Evitar: `edit_file`, `recovery_edit`, `smart_edit_file` (edición en memoria no persiste)

**Workflow correcto:**
1. Leer: `read_file` (obtener contenido completo)
2. Modificar: en memoria (reemplazo de texto)
3. Escribir: `write_file` o `intelligent_write` (persiste en Windows)
4. Git: add, commit, push (si aplica)

Este es un problema de arquitectura de Claude Desktop, no un bug del código.
No se puede arreglar directamente en filesystem-ultra.